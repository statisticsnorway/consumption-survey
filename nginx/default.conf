# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs {
  server nextjs:3000;
}

upstream backend {
  server backend:8080;
}

# upstream postgres {
  # server postgres:5432;
# }

upstream bff {
  server bff:3005;
}

upstream adapter {
  server adapter:3007;
}

 upstream auth {
   server auth:8080;
 }

server {
  listen 80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;

  ssl_certificate /etc/secure/fbu.pem;
  ssl_certificate_key /etc/secure/fbu.key;

  server_name _;

  server_tokens off;

  http2_max_field_size 64k;
  http2_max_header_size 512k;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  # BUILT ASSETS (E.G. JS BUNDLES)
  # Browser cache - max cache headers from Next.js as build id in url
  # Server cache - valid forever (cleared after cache "inactive" period)
  # location /_next/static {
  #   proxy_cache STATIC;
  #   proxy_pass http://nextjs;
  # }

  # STATIC ASSETS (E.G. IMAGES)
  # Browser cache - "no-cache" headers from Next.js as no build id in url
  # Server cache - refresh regularly in case of changes
  # location /static {
  #   proxy_cache STATIC;
  #   proxy_ignore_headers Cache-Control;
  #   proxy_cache_valid 60m;
  #   proxy_pass http://nextjs;
  # }

  # backend -- will not work HTTPS -> HTTP !
  location /be/survey-service {
    rewrite /be/survey-service/(.*)    /$1 break;
    proxy_pass http://backend;
    proxy_redirect off;
    proxy_set_header HOST $host;
  }

  location /be/consumption-bff {
    rewrite /be/consumption-bff/(.*)   /$1 break;
    proxy_pass http://bff;
    proxy_redirect off;
    proxy_set_header HOST $HOST;
  }

  location /be/adapter {
    rewrite /be/adapter/(.*)    /$1 break;
    proxy_pass http://adapter;
    proxy_redirect off;
    proxy_set_header HOST $HOST;
  }

   location /auth {
     rewrite /auth/(.*)  /$1 break;
     proxy_pass http://auth/$1$is_args$args;
     proxy_redirect off;
     proxy_set_header HOST $HOST;
   }

    location /oauth2 {
        rewrite /(.*)    /$1 break;
        proxy_pass http://auth/$1$is_args$args;
        proxy_redirect off;
        proxy_set_header HOST $HOST;
    }

  # DYNAMIC ASSETS - NO CACHE
  location / {
    proxy_pass http://nextjs;
  }
}
